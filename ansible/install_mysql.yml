- name: Install and Configure Spark Cluster
  hosts: all
  become: yes
  vars:
    spark_version: "3.4.3"  # Adjust Spark version as needed
    hadoop_home: "/usr/local/hadoop"
    hive_version: "4.0.0"    # Update as needed
    hive_home: "/usr/local/hive"
    spark_home: "/usr/local/spark"
    java_home: "/usr/lib/jvm/java-11-openjdk-amd64"
    hadoop_user: "root"
    mysql_host: "{{ groups['master'][0] }}"  # 主节点地址
    mysql_database: "hive"
    mysql_user: "hiveuser"
    mysql_password: "your_password"
    mysql_root_password: "helloworld"
    hive_db_name: "hive"
    hive_user: "hive"
    hive_password: "*Hive123"
  # Define handlers for restarting the SSH service
 
  tasks:
    # - name: Install MySQL Server
    #   apt:
    #     name: mysql-server
    #     state: present
    #     update_cache: yes
    #   when: "'master' in group_names"
    # - name: Ensure MySQL service is running
    #   service:
    #     name: mysql
    #     state: started
    #     enabled: yes
    #   when: "'master' in group_names"
    # - name: Install Python MySQL dependencies (PyMySQL for Python 3)
    #   package:
    #     name: python3-pymysql
    #     state: present
    #   when: "'master' in group_names"

    - name: Create /root/.my.cnf file for MySQL root user
      copy:
        dest: /root/.my.cnf
        content: |
          [client]
          user=root
          password=helloworld  # 将your_password替换为你的 MySQL root 用户的密码
        owner: root
        group: root
        mode: '0600'  # 确保只有 root 用户能读取文件
      when: "'master' in group_names"
    - name: Ensure MySQL is running
      service:
        name: mysql
        state: started
      when: "'master' in group_names"

    - name: Create Hive database and user using shell command
      shell: |
        sudo mysql -u root -p{{ mysql_root_password }} -e "CREATE DATABASE IF NOT EXISTS {{ hive_db_name }};"
        sudo mysql -u root -p{{ mysql_root_password }} -e "CREATE USER IF NOT EXISTS '{{ hive_user }}'@'%' IDENTIFIED BY '{{ hive_password }}';"
        sudo mysql -u root -p{{ mysql_root_password }} -e "GRANT ALL PRIVILEGES ON {{ hive_db_name }}.* TO '{{ hive_user }}'@'%';"
        sudo mysql -u root -p{{ mysql_root_password }} -e "FLUSH PRIVILEGES;"
      become: yes
      when: "'master' in group_names"

    - name: Modify MySQL bind address to 0.0.0.0
      lineinfile:
        path: /etc/mysql/mysql.conf.d/mysqld.cnf
        regexp: '^bind-address'
        line: 'bind-address = 0.0.0.0'
      when: "'master' in group_names"
    - name: Restart MySQL service
      service:
        name: mysql
        state: restarted
      when: "'master' in group_names"
    - name: Install net-tools package (for netstat)
      apt:
        name: net-tools
        state: present
      when: "'master' in group_names"

    - name: Check if MySQL is listening on port 3306
      shell: "netstat -plunt | grep 3306"
      register: mysql_listening
      failed_when: mysql_listening.rc != 0
      when: "'master' in group_names"

    - name: Print MySQL listening check output
      debug:
        var: mysql_listening.stdout
      when: "'master' in group_names"
