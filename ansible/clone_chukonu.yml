---
- name: install chukonu
  hosts: master
  become: yes
  tasks:
    - name: Copy chukonu
      copy:
        src: ./{{ item }}
        dest: /root/{{ item }}
        owner: root
        mode: '0644'
      loop:
        - chukonu.tar.gz

    - name: Extract chukonu.tar.gz
      unarchive:
        src: "/root/chukonu.tar.gz"   # Source tar.gz file
        dest: "/opt"                  # Destination directory to extract files
        remote_src: yes               # Indicates that the source is on the remote machine
      become: yes
      become_user: root
    - name: Cleanup the tar.gz file
      file:
        path: "/root/chukonu.tar.gz"
        state: absent  
      become: yes
      become_user: root

    - name: Install required packages
      apt:
        name:
          - nfs-kernel-server
          - git
          - cmake
          - g++
          - g++-9
          - g++-10
        state: present
        update_cache: yes

    - name: Set g++ alternatives
      command: >
        update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-10 10
      ignore_errors: yes

    - name: Set g++ alternatives for g++-9
      command: >
        update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-9 10
      ignore_errors: yes

    - name: Set g++ to g++-10
      command: update-alternatives --set g++ /usr/bin/g++-10

    - name: Verify g++ version
      command: g++ --version
      register: gpp_version

    - name: Create installation directory
      file:
        path: /opt/chukonu_install
        state: directory

    - name: Create build directory
      file:
        path: /opt/chukonu_install/chukonu/build
        state: directory

    # - name: Run CMake
    #   command: >
    #     CC=gcc CXX=g++ cmake -DCMAKE_BUILD_TYPE=Release -DCMR_BUILD_APPLICATIONS=OFF -DCMR_BUILD_BB=OFF
    #     -DCMR_BUILD_EXAMPLES=OFF -DCMR_BUILD_MICROBENCHMARK=OFF -DCMR_BUILD_TESTS=OFF
    #     -DCMR_BUILD_TOOLS=OFF -DCMR_BUILD_TPCDS=OFF
    #     -DCMAKE_INSTALL_PREFIX=/opt/chukonu_install ..
    #   args:
    #     chdir: /opt/chukonu_install/chukonu/build

    # - name: Build Chukonu
    #   command: make -j8
    #   args:
    #     chdir: /opt/chukonu_install/chukonu/build

    # - name: Package Scala project
    #   command: sbt +package
    #   args:
    #     chdir: /opt/chukonu_install/chukonu/scala

    # - name: Install Chukonu
    #   command: make install
    #   args:
    #     chdir: /opt/chukonu_install/chukonu/build

    # - name: Copy JAR to all_jars directory
    #   copy:
    #     src: /opt/chukonu_install/jar/chukonu_2.12-0.5.1.jar
    #     dest: /opt/all_jars/

    # - name: Create cache and staging directories
    #   file:
    #     path: "{{ item }}"
    #     state: directory
    #   loop:
    #     - /opt/chukonu_cache
    #     - /opt/chukonu_staging

    # - name: Configure NFS exports
    #   lineinfile:
    #     path: /etc/exports
    #     line: '/opt/chukonu_cache/ *(rw,insecure,sync,no_subtree_check,no_root_squash)'
    #     state: present

    # - name: Export NFS shares
    #   command: exportfs -a

    # - name: Start NFS server
    #   service:
    #     name: nfs-kernel-server
    #     state: started
    #     enabled: true

    # - name: Check NFS server status
    #   command: systemctl status nfs-kernel-server
    #   register: nfs_status

    # - name: Display NFS server status
    #   debug:
    #     var: nfs_status.stdout