name: Set up Python and Install Dependencies
description: Sets up Python environment and installs Boto3

runs:
  using: 'composite'
  steps:
    # Step 4: 从 inventory.ini 文件提取 DNS
    - name: Extract all nodes from inventory.ini
      id: extract_nodes
      run: |
        # 提取 master 节点的 DNS
        MASTER_DNS=$(grep -A 1 "\[master\]" ./ansible/inventory.ini | tail -n 1 | awk '{print $1}')

        # 提取 worker 节点的 DNS
        WORKER_DNS=$(awk '/^\[worker\]/ {flag=1; next} /^\[/{flag=0} flag' ./ansible/inventory.ini | awk '{print $1}')

        echo "Master DNS: $MASTER_DNS"
        echo "Worker DNS: $WORKER_DNS"
        
        # 设置 GitHub Actions 输出变量
        echo "::set-output name=master_dns::$MASTER_DNS"
        echo "::set-output name=worker_dns::$WORKER_DNS"


        # 读取 inventory.ini 文件内容并设置为输出变量
        INVENTORY_CONTENT=$(cat ./ansible/inventory.ini)
        echo "::set-output name=inventory_content::$INVENTORY_CONTENT"

        # 将所有节点的 DNS 添加到 known_hosts
        ssh-keyscan -H $MASTER_DNS >> ~/.ssh/known_hosts
        for WORKER in $WORKER_DNS; do
          ssh-keyscan -H $WORKER >> ~/.ssh/known_hosts
        done


        KNOWN_HOSTS_CONTENT=$(cat ~/.ssh/known_hosts)
        echo "::set-output name=known_hosts_content::$KNOWN_HOSTS_CONTENT"
      shell: bash  # 添加 shell 指定属性
   
    - name: Create directory on master
      run: |
        MASTER_DNS=${{ steps.extract_nodes.outputs.master_dns }}
        ssh -i ~/.ssh/local_test.pem ubuntu@$MASTER_DNS 'mkdir -p /home/ubuntu/tests'
        scp -i ~/.ssh/local_test.pem ./tests/case0.py ubuntu@${MASTER_DNS}:/home/ubuntu/tests/case0.py
      shell: bash  # 添加 shell 指定属性

    # Step 15: 测试
    - name: Run Spark Test
      run: |
        MASTER_DNS=${{ steps.extract_nodes.outputs.master_dns }}
        ssh -i ~/.ssh/local_test.pem ubuntu@$MASTER_DNS \
        "export SPARK_HOME=/usr/local/spark; export PATH=\$PATH:\$SPARK_HOME/bin; spark-submit --master spark://$MASTER_DNS:7077 ~/tests/case0.py"
      shell: bash  # 添加 shell 指定属性